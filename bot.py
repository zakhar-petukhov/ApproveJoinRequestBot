from enum import Enum, auto

import jsonpickle
from telethon import Button, TelegramClient, events
from telethon.tl.types import UpdateBotChatInviteRequester

import config
from models import User
from utils import Setting, get_currency, get_or_create_user

admins = [594400511, 1260871881, 149031756, 583525749, 952644352]

bot = TelegramClient('bot', config.API_ID, config.API_HASH).start(bot_token=config.BOT_TOKEN)


@bot.on(events.NewMessage(pattern='/admin'))
async def admin(event):
    who = event.sender_id
    if who in admins:
        keyboard = [
            [Button.inline("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", b"statistics")],
            [Button.inline("–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", b"mailing")],
        ]
        await event.respond("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!", buttons=keyboard)


@bot.on(events.NewMessage(pattern='/start'))
async def start(event):
    who = event.sender_id
    get_or_create_user(who)

    keyboard = [
        [
            Button.text("üá∑üá∫ RUB", resize=True),
            Button.text("üåç –ü—Ä–æ—á–∏–µ", resize=True),
        ],
        [
            Button.text("üá∫üá¶ UAH", resize=True),
            Button.text("üí≤ Crypto", resize=True),
        ],
    ]
    text = """
–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
        """
    await event.respond(text, buttons=keyboard)
    raise events.StopPropagation


@bot.on(events.NewMessage(pattern="(?i)üá∑üá∫ RUB|üåç –ü—Ä–æ—á–∏–µ|üá∫üá¶ UAH|üí≤ Crypto"))
async def button_currency(event):
    user_id = event.message.peer_id.user_id
    button_text = event.raw_text

    # try:
    #     await bot.get_permissions(config.SUBSCRIBE_CHANNEL, user_id)
    # except:
    #     await event.respond("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ @idei_biznes.")
    #     return

    if button_text == "üá∑üá∫ RUB":
        text = f"""
üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å

{get_currency(ru=True)}
    """
        await event.respond(text)

    elif button_text == "üá∫üá¶ UAH":
        text = f"""
üá∫üá¶ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞

{get_currency(uah=True)}
    """
        await event.respond(text)

    elif button_text == "üåç –ü—Ä–æ—á–∏–µ":
        await event.respond(get_currency(other=True))

    elif button_text == "üí≤ Crypto":
        await event.respond(get_currency(crypto=True))

    raise events.StopPropagation


@bot.on(events.CallbackQuery(pattern="statistics"))
async def statistics(event):
    total_users = User.select().count()
    active_users = User.select().where(User.active == True).count()
    text = f"""
–í–æ—Ç –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ –±–æ—Ç–µ:

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: **{active_users}**
"""
    user_id = event.sender_id
    msg_id = event.message_id

    await bot.edit_message(user_id, message=msg_id, text=text)
    raise events.StopPropagation


@bot.on(events.CallbackQuery(pattern="mailing"))
async def mailing(event):
    s = Setting()
    text = s.mail_text()

    keyboard = [
        [
            Button.text("‚úÖ –†–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", resize=True),
            Button.text("üëÅ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", resize=True),
        ],
        [
            Button.text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", resize=True),
            Button.text("üåÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", resize=True),
        ],
        [
            Button.text("üìº –ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–µ–æ", resize=True),
            Button.text("üñº –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–Ω–∏–∑—É", resize=True),
        ],
        [
            Button.text("üåç –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É", resize=True),
            Button.text("üñ• –í–∫–ª/–≤—ã–∫–ª –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", resize=True),
        ],
        [
            Button.text("üóë –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", resize=True),
            Button.text("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", resize=True),
        ]
    ]

    user_id = event.sender_id

    await bot.send_message(user_id, text, buttons=keyboard, parse_mode='html', link_preview=False)
    raise events.StopPropagation


@bot.on(events.ChatAction)
async def handler(event):
    if type(event.original_update) == UpdateBotChatInviteRequester:
        user_id = event.user_id
        keyboard = [
            [
                Button.text("üá∑üá∫ RUB", resize=True),
                Button.text("üåç –ü—Ä–æ—á–∏–µ", resize=True),
            ],
            [
                Button.text("üá∫üá¶ UAH", resize=True),
                Button.text("üí≤ Crypto", resize=True),
            ],
        ]
        get_or_create_user(user_id)
        await bot.send_message(event.user_id,
                               "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.",
                               buttons=keyboard)


class State(Enum):
    WAIT_TEXT = auto()
    WAIT_PHOTO = auto()
    WAIT_VIDEO = auto()
    WAIT_CONTENT = auto()
    WAIT_BUTTON = auto()


conversation_state = {}


@bot.on(events.NewMessage)
async def handler(event):
    who = event.sender_id
    state = conversation_state.get(who)

    if who not in admins:
        return

    text = event.raw_text
    s = Setting()

    if text.lower() == '–æ—Ç–º–µ–Ω–∞':
        del conversation_state[who]
        await mailing(event)

    if state is None:
        if text != '':
            keyboard_cancel = [
                [
                    Button.text("–û—Ç–º–µ–Ω–∞", resize=True),
                ]
            ]

            if text == '/admin':
                return

            elif text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç':
                await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç', buttons=keyboard_cancel)
                conversation_state[who] = State.WAIT_TEXT

            elif text == 'üåÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ':
                await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ (–∫–∞–∫ —Ñ–∞–π–ª)', buttons=keyboard_cancel)
                conversation_state[who] = State.WAIT_PHOTO

            elif text == 'üìº –ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–µ–æ':
                await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ', buttons=keyboard_cancel)
                conversation_state[who] = State.WAIT_VIDEO

            elif text == 'üñº –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–Ω–∏–∑—É':
                await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç (—Ñ–æ—Ç–æ / GIF / –≤–∏–¥–µ–æ):', buttons=keyboard_cancel)
                conversation_state[who] = State.WAIT_CONTENT

            elif text == 'üåç –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É':
                await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫—É. –ù–∞–ø—Ä–∏–º–µ—Ä Google|google.ru:',
                                    buttons=keyboard_cancel)
                conversation_state[who] = State.WAIT_BUTTON

            elif text == 'üñ• –í–∫–ª/–≤—ã–∫–ª –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä':
                s.switch_preview()
                await mailing(event)

            elif text == '‚úÖ –†–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
                await event.respond('–†–∞—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞')
                await s.send_mail(preview=False, admin_id=who)

            elif text == 'üëÅ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è':
                await s.send_mail(preview=True, admin_id=who)

            elif text == 'üóë –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
                s.clear_mail()
                await mailing(event)

            elif text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
                await start(event)

    elif state == State.WAIT_TEXT:
        text = event.message.message

        if event.message.entities:
            entities = jsonpickle.encode(event.message.entities)
        else:
            entities = 'None'

        if text.lower() != '–æ—Ç–º–µ–Ω–∞':
            s.change_value('mail.json', 'text', text)
            s.change_value('mail.json', 'entities', entities)
            s.change_value('mail.json', 'content', 'False')

        del conversation_state[who]
        await mailing(event)

    elif state == State.WAIT_PHOTO:
        try:
            file_id = event.file.id
            file_name = event.file.name
        except:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ (–∫–∞–∫ —Ñ–∞–π–ª)')
            return

        mime_type = event.media.document.mime_type
        if '.gif' in file_name:
            content_type = 'animation'
        elif 'image' in mime_type:
            content_type = 'photo'
        else:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ (–∫–∞–∫ —Ñ–∞–π–ª)')
            return

        if content_type == 'photo':
            file = await bot.download_media(event.media)
        else:
            file = file_id

        s.change_value('mail.json', 'media', f'{content_type}:{file}')

        del conversation_state[who]
        await mailing(event)

    elif state == State.WAIT_VIDEO:
        try:
            file_id = event.file.id
        except:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ')
            return

        mime_type = event.media.document.mime_type
        if 'video' in mime_type:
            content_type = 'video'
        else:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ')
            return

        s.change_value('mail.json', 'media', f'{content_type}:{file_id}')

        del conversation_state[who]
        await mailing(event)

    elif state == State.WAIT_CONTENT:
        try:
            file_id = event.file.id
            file_name = event.file.name
        except:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ñ–∞–π–ª –∫–∞–∫ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ')
            return

        mime_type = event.media.document.mime_type
        if 'image' in mime_type:
            content_type = 'photo'
        elif '.gif' in file_name:
            content_type = 'animation'
        elif 'video' in mime_type:
            content_type = 'video'
        else:
            await event.respond('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ñ–∞–π–ª –∫–∞–∫ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ')
            return

        await s.add_content(file_id, content_type)
        s.change_value('mail.json', 'preview', 'True')

        del conversation_state[who]
        await mailing(event)

    elif state == State.WAIT_BUTTON:
        text = event.message.message

        if text.lower() != '–æ—Ç–º–µ–Ω–∞':
            s.change_value('mail.json', 'button', text)

        del conversation_state[who]
        await mailing(event)
